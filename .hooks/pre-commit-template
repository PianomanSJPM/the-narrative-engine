#!/bin/bash
# Pre-commit hook for SRD 5.1 compliance enforcement
# This script ensures all commits adhere to copyright and licensing requirements

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Required SRD attribution text
REQUIRED_ATTRIBUTION="This work includes material from the System Reference Document 5.1 and is licensed under the Creative Commons Attribution 4.0 International License."

# Restricted keywords that indicate non-SRD content
RESTRICTED_KEYWORDS=(
    "classic fantasy setting"
    "mystic realm"
    "dark domain"
    "psionic horror"
    "eye tyrant"
    "famous wizard"
    "undying sorcerer"
    "established campaign setting"
    "tabletop fantasy RPG"
    "tabletop fantasy RPG"
    "[REDACTED]"
    "[REDACTED]"
)

# Files that require SRD attribution
SRD_ATTRIBUTION_FILES=(
    "srd_data"
    "*.json"
    "*.md"
)

# Files to exclude from keyword scanning
EXCLUDE_PATTERNS=(
    ".git"
    "node_modules"
    "__pycache__"
    "*.pyc"
    "*.pyo"
    "*.pyd"
    ".DS_Store"
    "venv"
    ".venv"
    "LICENSE.txt"
    "COMPLIANCE_SUMMARY.md"
    ".hooks"
    "branding_status/compliance_log.md"
    "branding_status/compliance_milestone_srd_exemption.md"
)

echo -e "${GREEN}üîç Running SRD 5.1 compliance check...${NC}"

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$STAGED_FILES" ]; then
    echo -e "${GREEN}‚úÖ No files staged for commit.${NC}"
    exit 0
fi

VIOLATIONS_FOUND=false
ATTRIBUTION_VIOLATIONS=()
KEYWORD_VIOLATIONS=()

# Function to check if file should be excluded
should_exclude() {
    local file="$1"
    for pattern in "${EXCLUDE_PATTERNS[@]}"; do
        if [[ "$file" == *"$pattern"* ]]; then
            return 0  # Should exclude
        fi
    done
    return 1  # Should include
}

# Function to check if file requires SRD attribution
requires_attribution() {
    local file="$1"
    for pattern in "${SRD_ATTRIBUTION_FILES[@]}"; do
        if [[ "$file" == *"$pattern"* ]] || [[ "$file" == srd_data/* ]]; then
            return 0  # Requires attribution
        fi
    done
    return 1  # Doesn't require attribution
}

# Check each staged file
for file in $STAGED_FILES; do
    if should_exclude "$file"; then
        continue
    fi
    
    echo -e "Checking: ${YELLOW}$file${NC}"
    
    # Check for SRD attribution requirement
    if requires_attribution "$file"; then
        if ! grep -q "$REQUIRED_ATTRIBUTION" "$file" 2>/dev/null; then
            ATTRIBUTION_VIOLATIONS+=("$file")
            echo -e "  ${RED}‚ùå Missing SRD attribution${NC}"
        else
            echo -e "  ${GREEN}‚úÖ SRD attribution found${NC}"
        fi
    fi
    
    # Check for restricted keywords (skip if file contains required attribution)
    if ! grep -q "$REQUIRED_ATTRIBUTION" "$file" 2>/dev/null; then
        for keyword in "${RESTRICTED_KEYWORDS[@]}"; do
            if grep -n -i "$keyword" "$file" 2>/dev/null; then
                KEYWORD_VIOLATIONS+=("$file:$keyword")
                echo -e "  ${RED}‚ùå Restricted keyword found: $keyword${NC}"
            fi
        done
    else
        echo -e "  ${GREEN}‚úÖ File contains required attribution - skipping keyword check${NC}"
    fi
done

# Report violations
if [ ${#ATTRIBUTION_VIOLATIONS[@]} -gt 0 ] || [ ${#KEYWORD_VIOLATIONS[@]} -gt 0 ]; then
    echo -e "\n${RED}üö® COMPLIANCE VIOLATIONS FOUND${NC}"
    echo -e "======================================"
    
    if [ ${#ATTRIBUTION_VIOLATIONS[@]} -gt 0 ]; then
        echo -e "\n${RED}Missing SRD Attribution:${NC}"
        for file in "${ATTRIBUTION_VIOLATIONS[@]}"; do
            echo -e "  - $file"
        done
        echo -e "\nRequired attribution text:"
        echo -e "  \"$REQUIRED_ATTRIBUTION\""
    fi
    
    if [ ${#KEYWORD_VIOLATIONS[@]} -gt 0 ]; then
        echo -e "\n${RED}Restricted Keywords Found:${NC}"
        for violation in "${KEYWORD_VIOLATIONS[@]}"; do
            echo -e "  - $violation"
        done
        echo -e "\nRestricted keywords include:"
        printf "  - %s\n" "${RESTRICTED_KEYWORDS[@]}"
    fi
    
    echo -e "\n${RED}Commit aborted due to compliance violations.${NC}"
    echo -e "Please fix the issues above and try again."
    echo -e "\nFor more information, see:"
    echo -e "  - COMPLIANCE_SUMMARY.md"
    echo -e "  - srd_data/ATTRIBUTION.md"
    echo -e "  - Run: python cli/compliance_check.py"
    
    exit 1
fi

echo -e "\n${GREEN}‚úÖ All files pass SRD 5.1 compliance check!${NC}"
exit 0
